// <auto-generated />
using System;
using BookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingSystem.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20241017105459_INIT2")]
    partial class INIT2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem.Models.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomID");

                    b.HasIndex("UserID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.BookingIntegration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<int>("IntegrationTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingID");

                    b.HasIndex("IntegrationTypeID");

                    b.ToTable("BookingIntegrations");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.IntegrationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegrationTypes");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.RoomIntegration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalCalendarID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegrationTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntegrationTypeID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomIntegrations");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.Booking", b =>
                {
                    b.HasOne("BookingSystem.Models.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.BookingIntegration", b =>
                {
                    b.HasOne("BookingSystem.Models.Entities.Booking", "Booking")
                        .WithMany("BookingIntegrations")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.Entities.IntegrationType", "IntegrationType")
                        .WithMany("BookingIntegrations")
                        .HasForeignKey("IntegrationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("IntegrationType");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.RoomIntegration", b =>
                {
                    b.HasOne("BookingSystem.Models.Entities.IntegrationType", "IntegrationType")
                        .WithMany("RoomIntegrations")
                        .HasForeignKey("IntegrationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.Entities.Room", "Room")
                        .WithMany("RoomIntegrations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntegrationType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.Booking", b =>
                {
                    b.Navigation("BookingIntegrations");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.IntegrationType", b =>
                {
                    b.Navigation("BookingIntegrations");

                    b.Navigation("RoomIntegrations");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RoomIntegrations");
                });

            modelBuilder.Entity("BookingSystem.Models.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
